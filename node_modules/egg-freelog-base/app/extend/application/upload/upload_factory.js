/**
 * Created by yuliang on 2017/7/4.
 */

'use strict'

const singleton = require('../singleton')
const instaceFunc = singleton(function (uploadConfig) {
    let uploadInstace = null
    for (let item in uploadConfig) {
        if (!uploadConfig[item].enable) {
            continue
        }
        switch (item) {
            case 'amzS3':
                throw new Error('未实现的上传方式:' + item)
                break;
            case 'aliOss':
            default:
                //调用时根据配置决定是否加载ali-oss模块.
                uploadInstace = new (require('./alioss_upload'))(uploadConfig.aliOss)
                break;
        }
        break
    }
    return uploadInstace
})

module.exports = uploadConfig => {

    let instace = instaceFunc(uploadConfig)

    if (!instace) {
        throw new Error('未能在配置文件中找到已启用的上传组件')
    }

    return {
        /**
         * 以buffer的形式上传文件
         * ALI-OSS WIKI:https://help.aliyun.com/document_detail/32072.html?spm=5176.doc32070.6.754.A49ih2
         * @param filePath 文件上传路径
         * @param fileBuffer 文件buffer
         * @returns {Promise.<T>}
         */
        putBuffer(filePath, fileBuffer)
        {
            return instace.putBuffer(filePath, fileBuffer)
        },

        /**
         * 以file-stream的形式上传文件
         * ALI-OSS WIKI:https://help.aliyun.com/document_detail/32072.html?spm=5176.doc32070.6.754.A49ih2
         * @param filePath 文件上传路径
         * @param fileStream 文件流
         * @param contentLength 文件大小
         * @returns {Promise.<T>}
         */
        putStream(filePath, fileStream)
        {
            return instace.putStream(filePath, fileStream)
        }
    }
}

